<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Traffic Game</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="description" content="" />
    <meta name="author" content="amir farrahi" />

    <!-- Le styles -->
<link rel="stylesheet" href="css/bootstrap.min.css" />
     <link rel="stylesheet" href="css/style.css" />

<script>   
 if (sessionStorage.getItem('userinfo') == null) {
        window.location.replace("login.html");
       };
</script>
  


    <!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="../assets/js/html5shiv.js"></script>
    <![endif]-->

    <!-- Fav and touch icons -->
  
 </head>

  <body>
 
    <div class="container">
    <div class="row">
    
    
    
<div class="col-md-3" data-toggle="tooltip" title="The user name associated with your account"><span class="label label-success" >User Name:</span>
<span id="username" ></span>
</div> 
<div class="col-md-3"><span class="label label-default hidden"> Condition:</span>
<span id="contxt" class="hidden"><strong></strong></span>
<button id="iwo" class="hidden"></button>
<button id="iwc" class="hidden"></button>
<span class="label label-info">Travel Time:</span>
<span id="traveltime" ><strong></strong></span>
</div> 
<div class="col-md-3"><span class="label label-default">Distance:</span>
<span id="distance" ><strong></strong></span>
</div> 
<div class="col-md-3" data-toggle="tooltip" title="The out-of-pocket monetary cost that you have spent in THIS trip"><span class="label label-default">Cost:</span>
<span id="cost" ><strong></strong></span>
</div>

    </div>
        <div class="top-buffer row">
<div class="col-md-3" data-toggle="tooltip" title="The start node of your trip."><span class="label label-info">Origin:</span>
 <span id="origin" ><strong></strong></span>

</div> 
<div class="col-md-3" data-toggle="tooltip" title="The end node of your trip."><span class="label label-info">Destination:</span>
 <span id="destination" ><strong></strong></span>
</div> 
<div class="col-md-3" data-toggle="tooltip" title="The time you decide to begin your trip/The virtual time at the moment in the game.">
<span id='dt_ct' class="label label-success"></span>
 <select  id="worktime">
  <option value="7:00">7:00 AM</option>
  <option value="7:15">7:15 AM</option>
  <option value="7:30">7:30 AM</option>    
  <option value="7:45">7:45 AM</option>
  <option value="8:00">8:00 AM</option>
  <option value="8:15">8:15 AM</option>
  <option value="8:30">8:30 AM</option>
  <option value="8:45">8:45 AM</option>
  <option value="9:00">9:00 AM</option>
  <option value="9:15">9:15 AM</option>
  <option value="9:30">9:30 AM</option>
  <option value="9:45">9:45 AM</option>
  <option value="10:00">10:00 AM</option>
  <option value="10:15">10:15 AM</option>
  <option value="10:30">10:30 AM</option>
  <option value="10:45">10:45 AM</option>
  <option value="11:00">11:00 AM</option>
  <option value="11:15">11:15 AM</option>
  <option value="11:30">11:30 AM</option>
  <option value="11:45">11:45 AM</option>
  <option value="12:00">12:00 AM</option>                  
</select> 

</div> 
<div class="col-md-3 hidden" data-toggle="tooltip" title="The remaining monetary budget you have. Note that this budget goes with your account and you are going to perform a series of trips with it"><span class="label label-default">Budget:</span>
<span id="budget" class="hidden" ><strong></strong></span>
</div>
<div class="col-md-3">
  <button id="showusers" type="button" class="btn btn-primary hidden" data-toggle="tooltip" title="the location of other player(s) that are simultaneously in the game">players location</button>
<div id='somediv'></div>
  <button id="qprompt" type="button" class="btn btn-primary hidden" data-toggle="modal" data-target="#myModal" data-backdrop="static" data-keyboard="false" data-whatever="@mdo">Open modal for @mdo</button>
  <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
           <h4 class="modal-title" id="QuestionLabel">what went wrong?</h4>
        </div>
        <div class="modal-body">
          <form>
             <div id="answergrp" class="form-group">
             <textarea class='form-control' id='message-text'></textarea>          

            </div>
          </form>
        </div>
        <div class="modal-footer">
        <p id="prompterr" class="text-left"></p>
          <button id="answerbtn" type="button" class="btn btn-primary">Submit</button>
          <button id="cancelbtn" type="button" class="btn btn-primary">Cancel</button>
        </div>
      </div>
    </div>
  </div>

</div> 


</div>
<div class="top-buffer row">
<div  class="col-md-4" data-toggle="tooltip" title="The transportation mode that you prefer/decide to use while performing your trip. There are optional routes (if available) under each corresponding travel mode." >
<span class="label label-success">Travel Mode:</span>
<div id="tmbtn" class="btn-group" role="group">
  <button data-tmid="1" id="car" type="button" class="btn btn-default">car</button>
  <button data-tmid="2" id="bike" type="button" class="btn btn-default">bike</button>
  <button data-tmid="3" id="pb" type="button" class="btn btn-default">public transport</button>
</div>
</div>
<div class="col-md-2">
<button id="startbtn" class="btn btn-default" type="button" >Go!</button>
</div>
<div class="col-md-3" data-toggle="tooltip" title="The latest weather/incident information impacting your commute.">

<span class="label label-warning">Traffic Info:</span>


  <span id="trafficnews" class="label label-danger" ><strong></strong></span>


</div>
<div class="col-md-3" data-toggle="tooltip" title="The amount of time that you have spent in THIS trip."><span class="hidden label label-default">Time elapsed:</span>
<span class="hidden" id="ttime" ><strong></strong></span>
</div> 

</div>
<div class="top-buffer row">
<div class="col-md-6">
  <div id="routegrp" class="form-group">
  </div>
</div>
<div class="col-md-6">

</div>
</div>
<div class="top-buffer row">


<nav class="navbar navbar-default"> <div class="container-fluid"> 
 <div class="navbar-header"> <a id="hist" class="navbar-brand" href="#">Trip History</a> </div> 
 <div class="col-md-4"> </div>
 <div class="navbar-header"> <a id="main" class="navbar-brand" href="#">Main</a> </div> 
  <div class="col-md-4"> </div>
 <div class="navbar-header" data-toggle="tooltip" title="Location of other players">
 <a id="loc" class="navbar-brand" href="#">Players Location</a> </div> 
 </div> </nav>


<div id="ccc" class="col-md-12 map">
<div id="gmap" class="col-md-12 map">
</div>

       
        
    



<div id="histtab" class="col-md-12"> 
<div id="gmaphist" class="col-md-7 map"></div>
<div  class="col-md-5">
  <table class="table table-stripe">
    <thead>
      <tr>
        <th>Mode</th>
        <th>Cost</th>
        <th>Travel Time</th>
        <th>Distance</th>
      </tr>
    </thead>
    <tbody id="histtable">
    <tr></tr>
        <tr></tr>
            <tr></tr>
                <tr></tr>
    </tbody>
  </table>
</div>
</div>
<div id="gmaploc" class="col-md-12 map"></div>

</div>
<div id="animation" class="col-md-12 hidden"><img id="ride" class="center-block" src="" /></div>
</div>
<div class="row">
<div class="col-md-12 text-center">
<button type="button" class="btn btn-link" data-toggle="modal" data-target="#myModal">report a bug</button>
</div>
</div>




        

    </div> <!-- /container -->

    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->


<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
 <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" 
 crossorigin="anonymous"></script>
 <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDVHCSIgYfsYUdCjpevjf00e0RsOyAAvDY&callback=initMap"
    async defer></script>


      <script>
    
var map;
var hr=0;
var routeselectedindex=0;
var worktime;
var totalmilage=0;
var ttime=0;
var start;
var pretripcost;
var pretripmile;
var pretriptraveltime;
var polyline,trafficpolyline;
var myLatlng;
var srcmyLatlng=-1;
var desmyLatlng=-1;
var desmarker;
var srcmarker;
var conditionid,tm;
var gameid=-1;
var qid=-1;
var trafficnews="";
var anid=-1;
var antext="";
var antype="";
var budget=100;
var cost=0;
var traveltime=0;
var index=0;
var nextnode;
var r1,r2;
var gtm=-1;
var tm=0;
var tmname="";
var tmimagelink;
var acclink='img/accident.jpg';
var startnode,endnode,currnode;
var directionsService,directionsService2,directionsServicehist;
var directionsDisplay1,directionsDisplay2;
var curredge=-1;
var edgeaccind=-1;
var temp;
var delay=0;
var trafficflag;
var playsteps=0;
var busflag=0;
var tr1='';
var tr2='';
var tr3='';
var gtmbtncntr=0;

      function initMap() {
        myLatlng = new google.maps.LatLng(38.9072, -77.0369);
        map = new google.maps.Map(document.getElementById('gmap'), {
          center: myLatlng,
          zoom: 11,
          zoomControl: true
        });
        var myLatlng1 = new google.maps.LatLng(38.9072, -77.0369);
         hmap = new google.maps.Map(document.getElementById('gmaphist'), {
          center: myLatlng1,
          zoom: 11,
          zoomControl: true
        }); 
        var uloclatloncntr=new google.maps.LatLng(38.8992646,  -77.1549962);
        
        maploc = new google.maps.Map(document.getElementById('gmaploc'), {
          center: uloclatloncntr,
          zoom: 11,
          zoomControl: true
        });
        directionsService = new google.maps.DirectionsService;
        directionsServicehist = new google.maps.DirectionsService;
        directionsService2 = new google.maps.DirectionsService;
        directionsDisplay = new google.maps.DirectionsRenderer();
        directionsDisplay1 = new google.maps.DirectionsRenderer();
        directionsDisplay2 = new google.maps.DirectionsRenderer();
        directionsDisplayloc = new google.maps.DirectionsRenderer();
        directionsDisplayhist = new google.maps.DirectionsRenderer();

        directionsDisplay1.setMap(map);
        directionsDisplay2.setMap(map);
        directionsDisplayloc.setMap(maploc);
        directionsDisplayhist.setMap(hmap);

       
      }

  

    $( document ).ready(function() {

  
    $("#budget").text(budget+ ' $');
    $("#dt_ct").text("Departure Time:");
    $("#trafficnews").text("no traffic news availible");
 

    $('#desbtn').prop("disabled",true);
    $("#startbtn").prop("disabled",true);
    var uinfo=sessionStorage.getItem('userinfo');
    sessionStorage.setItem('userinfo', uinfo);
    var myObject = JSON.parse(uinfo);
     $("#username").text(myObject.name);
   var sss=(Math.floor(Math.random() * 8) + 1).toString();
   var eee=(Math.floor(Math.random()*(10-9+1)+9)).toString();
   var infowindow;

         $.ajax({
                   url: 'https://mighty-inlet-46722.herokuapp.com/nodes/' +sss ,
                   dataType: 'json',
                   type: 'GET',
                   async: true,
                   headers: { 'Authorization' : myObject.auth_token       },
                   contentType: 'application/json; charset=utf-8'
               
                }).done(function(data) {

                      $("#origin").text(data.name);  
                      if (srcmarker!=null) srcmarker.setMap(null);

                      var lat=parseFloat(data.lat);
          				 var lon=parseFloat(data.lon);


          				 srcmyLatlng = new google.maps.LatLng(lat,lon);
          				 start = srcmyLatlng;
          				 srcmarker = new google.maps.Marker({
          				 position: srcmyLatlng,
          				 title:data.name//,
          			//	 icon: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=' + data.name + '|FF0000|000000'
                      });
                      srcmarker.setMap(map);  
          
                      startnode=data.name;
                      currnode=startnode;
     
                 })
                  .fail(function(msg) {
             //     alert("failed");
                  alert(JSON.stringify(msg));
                             
                  });
                  
         $.ajax({
                   url: 'https://mighty-inlet-46722.herokuapp.com/nodes/10',
                   dataType: 'json',
                   type: 'GET',
                   async: true,
                   headers: { 'Authorization' : myObject.auth_token       },
                   contentType: 'application/json; charset=utf-8'
               
                }).done(function(data) {

                      $("#destination").text(data.name);
                      if (desmarker!=null) desmarker.setMap(null);
          
                      var lat=parseFloat(data.lat);
          				 var lon=parseFloat(data.lon);

          				 desmyLatlng = new google.maps.LatLng(lat,lon);
          				 desmarker = new google.maps.Marker({
          				 position: desmyLatlng,
          				 title:data.name//,
          				// icon: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=' + data.name + '|FF0000|000000'
       
          				 });
          				 desmarker.setMap(map); 
          				 endnode=data.name;  
     
                 })
                  .fail(function(msg) {
                  alert("failed");
                             
                 });
                  
         $.ajax({
                   url: 'https://mighty-inlet-46722.herokuapp.com/activeconditions',
                   dataType: 'json',
                   type: 'GET',
                   async: true,
                   headers: { 'Authorization' : myObject.auth_token       },
                   contentType: 'application/json; charset=utf-8'
               
                }).done(function(data) {
                   $("#contxt").text(data[0].name);
                   conditionid=data[0].id;

                   if (conditionid==2)     $("#trafficnews").text("inclement weather drive carefully");
                //   if (conditionid==3)     $("#trafficnews").text("Accident on I-66 expect delays");
                   if (conditionid==4)     $("#trafficnews").text("Inclement weather 50% on transit");
                //   if (conditionid==5) $("#myform").removeClass('hidden');
                  

             
                 })
                  .fail(function(msg) {
                  alert("faileeeed");
                             
                  });                  
                  
                         $.ajax({
                   url: 'https://mighty-inlet-46722.herokuapp.com/getuserhrrate',
                   dataType: 'json',
                   type: 'GET',
                   async: true,
                   headers: { 'Authorization' : myObject.auth_token       },
                   contentType: 'application/json; charset=utf-8'
               
                }).done(function(data) {
                   hr=data.hrrate; 
                  // alert(hr);               

             
                 })
                  .fail(function(msg) {
                  alert("failed");
                             
                  });  
         
                 //   $("#histtab").toggle();
                    $("#gmaploc").hide();
                    $("#histtab").hide(); 
      
       $('#myModal').on('hidden.bs.modal', function () {

        $(this).removeData();
    //     alert("hi");
       });
       
       $('#hist').click(function() {
$("#gmap").hide();
$("#gmaploc").hide();
$("#histtab").show();
var center=hmap.getCenter();
google.maps.event.trigger(hmap, 'resize');
hmap.setZoom( hmap.getZoom() );
hmap.setCenter(center);
//$('#gmap').css('display','none');
//$("#gmaploc").hide();
//$('#gmaploc').css('display','none');
      //   $("#gmap").addClass('hidden');
      //   $("#gmaploc").addClass('hidden');
      //  $("#histtab").removeClass('hidden');
       });
        $('#loc').click(function() {
        
            $("#gmap").hide();
            $("#histtab").hide();
           // $("#gmaploc").show();
           // $("#gmap").addClass('hidden');
          //  $("#histtab").addClass('hidden');
           $("#gmaploc").show();//removeClass('hidden');
           var center=maploc.getCenter();   
google.maps.event.trigger(maploc, 'resize');
maploc.setZoom( maploc.getZoom() ); 
        maploc.setCenter(center);
         
              $.ajax({
                   url: 'https://mighty-inlet-46722.herokuapp.com/listuserloc',
                   dataType: 'json',
                   type: 'GET',
                   async: true,
                   headers: { 'Authorization' : myObject.auth_token       },
                   contentType: 'application/json; charset=utf-8'
               
                }).done(function(data) {
                   // alert(JSON.stringify(data.usersloc));
                    var userslocations=data.usersloc;
                    var umarker,ulat,ulon,uLatlng;
                  $.each(userslocations, function(index) {
                       ulat=userslocations[index].location[0];
                       ulon=userslocations[index].location[1];
                       uLatlng = new google.maps.LatLng(ulat,ulon);
                     //  alert(userslocations[index].name);
                      var  marker =  new google.maps.Marker({
            					position: uLatlng,
            					map: maploc,
            					label:  userslocations[index].name //,

            					//icon: 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=' +
            				// userslocations[index].name + '|FF0000|000000'
                       });
                      // marker.setMap(map)
                
                
                 

                  });
                })
                  .fail(function(msg) {
               alert(JSON.stringify(msg));
                  
                             
                  }); 
           
                    
        
        
           
       });
       $('#main').click(function() {
         $("#histtab").hide();//addClass('hidden');
                  $("#gmaploc").hide();//addClass('hidden');
         $("#gmap").show();//removeClass('hidden');

           var center=map.getCenter();   
google.maps.event.trigger(map, 'resize');
map.setZoom( map.getZoom() ); 
        map.setCenter(center);

       });



/*************************/
       $('#iwo').click(function() {
     //  alert(tr2);
       //       alert(tr3);

          });
/**************************/

        $('#startbtn').click(function() {
             

              gtmbtncntr=0;
              playsteps=playsteps+1;
              infowindow.close();
              pretripmile=totalmilage;
              $("#startbtn").prop("disabled",true);
              if (tm==2) $("#car").prop("disabled",true);
              if (tm==3) $("#car").prop("disabled",true);
              $("#ccc").hide();//addClass('hidden');
              budget=(budget-cost).toFixed(2);
              $("#budget").text(budget+ ' $');
            
              ttime=traveltime+ttime;
           
              $("#ttime").text(ttime.toFixed(2) +' min');
              $("#animation").removeClass('hidden');
              $('#ride').attr("src",tmimagelink);
              $("#routegrp").addClass('hidden');

               if (playsteps==1) $("#histtable").empty();
               $('#histtable').append("<tr><td>"+ tmname +"</td><td>"+cost.toFixed(2) +" $</td><td>"
               +totalmilage.toFixed(2)+" m</td><td>"+traveltime +" min</td></tr>");
               
               if (conditionid==5 && trafficflag ) {
                  var sysdate=new Date()
                  var pieces = worktime.trim().split(':')
                  var hhdiff=(Number(pieces[0])-sysdate.getHours())*60;
                  var mindiff=(Number(pieces[1])-sysdate.getMinutes());
                  var timediffinmin=hhdiff+mindiff;
               //   alert (timediffinmin);
                  delay=timediffinmin-traveltime;
                  if ((delay<0) && (playsteps>3)) $("#trafficnews").text((delay*-1).toFixed(2) + ' min delay / loosing ' + (delay*-1/60*hr).toFixed(2)+'$');
                  
               };
               if ((conditionid==3) && (playsteps>3)) $("#trafficnews").text("Accident on I-66 expect delays");
              setTimeout(revert, 5000);
 
            

          

  
                          
       });       
                  
       $('#desmenu li').click(function() {


          if (desmarker!=null) desmarker.setMap(null);
          
          var lat=parseFloat(this.getAttribute("data-lat"));
          var lon=parseFloat(this.getAttribute("data-lon"));

          desmyLatlng = new google.maps.LatLng(lat,lon);
          desmarker = new google.maps.Marker({
          position: desmyLatlng,
          title:this.getAttribute("data-name"),
       //   icon: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=' + this.getAttribute("data-name") + '|FF0000|000000'
       
          });
          desmarker.setMap(map); 
          $("#desbtn").text(this.getAttribute("data-name")); 
          endnode=this.getAttribute("data-name");
       });
       
       $('#srcmenu li').click(function() {
         
       if (srcmarker!=null) srcmarker.setMap(null);

          var lat=parseFloat(this.getAttribute("data-lat"));
          var lon=parseFloat(this.getAttribute("data-lon"));

          srcmyLatlng = new google.maps.LatLng(lat,lon);
          start = srcmyLatlng;
          srcmarker = new google.maps.Marker({
          position: srcmyLatlng,
          title:this.getAttribute("data-name"),
    //      icon: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=' + this.getAttribute("data-name") + '|FF0000|000000'
          });
          srcmarker.setMap(map);  
          $("#srcbtn").text(this.getAttribute("data-name"));
          startnode=this.getAttribute("data-name");
          currnode=startnode;
       });
      
           

       $('#showusers').click(function() {
     //    alert("test");
          window.open('map.html', 'window name', 'window settings'); 
       });
       

        function leave(){
         
         window.location='page2.html';
        };

        function revert(){
        
             $("#startbtn").prop("disabled",false);
         //    $("#trafficnews").text('');
             $("#ccc").show();//removeClass('hidden');
             $("#animation").addClass('hidden');
             $("#routegrp").removeClass('hidden');
         //    $("#tmbtn button").removeClass('hidden');
             calculateAndDisplayHRoute(directionsServicehist, directionsDisplayhist, start,temp,gtm,routeselectedindex,hmap);
           //   if (playsteps==1) $("#histtable").empty();
    
             //  $('#histtable').append("<tr><td>"+ tmname +"</td><td>"+pretripcost.toFixed(2) +" $</td><td>"
             //  +pretripmile.toFixed(2)+" m</td><td>"+pretriptraveltime +" min</td></tr>");
             start=temp;
            // $("#car").click();
          //   alert(pretripmile-totalmilage);
          //   alert(pretripmile);
             if (start==desmyLatlng) {
           //   $('#ride').attr("src",'img/gameover.jpg');
              
               $("#gmap").removeClass('hidden');
               infowindow.close();
               $("#tmbtn button").prop("disabled",true);
               $("#traveltime").text('');
               $("#cost").text('');
               $("#startbtn").prop("disabled",true);
               $("#trafficnews").text('');
               $("#distance").text("");
                var contentString = '<div id="content">'+
            'You have reached your destination; please click <a href="page2.html">here</a> to answer a post-game survey</div>';
        

          var winfowindow = new google.maps.InfoWindow({
          content: contentString,
          position:desmyLatlng
          });  
         winfowindow.open(map);
               return;
              }
               if (tm==1) $("#car").click();
               if (tm==2) $("#bike").click();
               if (tm==3) $("#pb").click();
         

        }
         
       $("#cancelbtn").click(function() {
         $('#myModal').modal('toggle');  
       });       

         
       $("#tmbtn button").click(function() {
       

          if (($("#worktime").val().length==0) && conditionid==5 ) 
          {alert('Enter your departure time');
           return false;
          };
          if ((conditionid==5) && (!$("#worktime")[0].checkValidity())) {
             alert('work start time is invalid');
             return false;
          }
          if ( srcmyLatlng==-1 || desmyLatlng==-1) 
          {          
          alert('choose source and destination');

          return false;
          }
       //  $("#worktime").addClass('hidden');
         $("#worktime").prop("disabled",true);
          worktime=$("#worktime").val();
       //   alert(worktime);
          var b1 = document.getElementById("bike");
          var b2 = document.getElementById("car");
          var b3 = document.getElementById("pb");
          b1.style.background = "white";            
          b2.style.background = "white";            
          b3.style.background = "white"; 
//          $("#routegrp").removeClass('hidden');
          document.getElementById(this.id).style.background="olive";           
          tm=this.getAttribute("data-tmid") ;  
 
           if (tm==1) { gtm=google.maps.DirectionsTravelMode.DRIVING;
                        tmimagelink='img/car.gif';
                        tmname='car';
                        //$('#ride').attr("src",'img/car.gif');
           }
           if (tm==2) { gtm=google.maps.DirectionsTravelMode.BICYCLING;
           					//$('#ride').attr("src",'img/bike.jpg');
           					tmimagelink='img/bike.jpg';
           					tmname='bike';
           			
           }
           if (tm==3) { gtm=google.maps.DirectionsTravelMode.TRANSIT;
                        //$('#ride').attr("src",'img/bus.gif');
                        tmimagelink='img/bus.gif';   
                        tmname='Metro';        
           }
           
           if ( srcmyLatlng==-1 || desmyLatlng==-1 || gtm==-1) 
          {          
          alert('choose source, destination and travel mode');
       //   $("#r1").attr('checked', false);
        //  $("#r2").attr('checked', false);
          return false;
          };
  //  alert(gtm);
                      //            if(t1 != null)       t1.setMap(null);

        if(polyline!= null)  polyline.setMap(null);
        if(trafficpolyline!= null)  trafficpolyline.setMap(null);
        calculateAndDisplayRoute(directionsService,directionsDisplay1,start,desmyLatlng,gtm,0,map);
       
  // var tbhtml=[];    
  //tr1=
 
//infowindow.close();


 calculateAndDisplayRoute1(directionsService2,directionsDisplay1,start,desmyLatlng,google.maps.DirectionsTravelMode.DRIVING,0,map,0);
 
 
  
 // calculateAndDisplayRoute1(directionsService2,directionsDisplay1,start,desmyLatlng,google.maps.DirectionsTravelMode.BICYCLING,0,map,1);
    
 //  calculateAndDisplayRoute1(directionsService2,directionsDisplay1,start,desmyLatlng,google.maps.DirectionsTravelMode.TRANSIT,0,map,2);
    

//alert(tr1);

//alert(rw1);

                     //          


                          $("#startbtn").prop("disabled",false);
        //   alert(startnode);
        //   alert (currnode);
       /*           $.ajax({
                   url: 'https://mighty-inlet-46722.herokuapp.com/getroute',
                   dataType: 'json',
		             async : false,
                   type: 'POST',
                   contentType: 'application/json; charset=utf-8',
                   data: JSON.stringify({ "condition_id": conditionid,"travel_mod":tm,"status":0,"origin":currnode,
                   "destination":endnode,"current_loc_type":"N","location_id":currnode  }),
                   headers: { 'Authorization' : myObject.auth_token       } 
          }).done(function(msg) {
                //   alert(JSON.stringify(msg));
                    var start,end;
                    var lat,lon;
                    
                    $("#traveltime").text('');
                    $("#cost").text('');
                    if (msg.traveltime!=null) {
                      traveltime=msg.traveltime;
                      $("#traveltime").text(traveltime+ ' minutes');
                    }
                    $("#cost").text('');
                    if (msg.cost!=null) { 
                      cost=msg.cost;
                      $("#cost").text(cost+ ' $');
                    }
                    if (msg.comingedge!=null) {
                       curredge= msg.comingedge;
                       edgeaccind=msg.accind;
                    }
                    
                    
                    if (msg.wp.length!=0) { 
                    		$("#startbtn").prop("disabled",false);
                    		nextnode=msg.wp[1].name;
                    		for (var i = 0; i < msg.wp.length; i++){
                          lat=msg.wp[i].location[0];
                          lon=msg.wp[i].location[1];
                          var gpoint=new google.maps.LatLng(lat, lon);
                          waypts.push({location:gpoint,stopover:false}); 
                          if (i==0)               start = new google.maps.LatLng(lat, lon);
                          if (i==msg.wp.length-1) end = new google.maps.LatLng(lat, lon);
                        } */

                
                    //    start = srcmyLatlng;
                 //      directionsDisplay1.setDirections({routes: []});
                //       calculateAndDisplayRoute(directionsService,directionsDisplay1,start,end,waypts,gtm,1);
                  /*  }
                    else $("#startbtn").prop("disabled",true);
             
                   
    		 })
          .fail(function(msg) {
                    alert("fail");
          });
       */
       
       });
        var t1,t2;
       $(document).on('change', 'input:radio[id^="r"]', function (event) {
       
         if ( srcmyLatlng==-1 || desmyLatlng==-1 || gtm==-1) 
          {          
          alert('choose source, destination and travel mode');
          $("#r1").attr('checked', false);
          $("#r2").attr('checked', false);
          return false;
          }
 //   alert(this.value);
                      //            if(t1 != null)       t1.setMap(null);
       if(polyline!= null)  polyline.setMap(null);
        if(trafficpolyline!= null)  trafficpolyline.setMap(null);

       routeselectedindex=this.value;
       calculateAndDisplayRoute(directionsService,directionsDisplay1,start,desmyLatlng,gtm,this.value,map);


               
       
                     //          


                          $("#startbtn").prop("disabled",false);
                    //   if (Number(this.value)==1) {  

                                //         start=test2;
        //    calculateAndDisplayRoute(directionsService,directionsDisplay2,srcmyLatlng,desmyLatlng,waypts,gtm,Number(this.value));
                       //    t1.setMap(null);

        
                 //         t2=new google.maps.DirectionsRenderer(r2); 
                //    }
                    
                                          
                 //     if (Number(this.value)==0) {  
                                        //         t1.setMap(null);
          
                                                 //  start=test1;
         //   calculateAndDisplayRoute(directionsService,directionsDisplay1,srcmyLatlng,desmyLatlng,waypts,gtm,Number(this.value));
           
                 //         t1=new google.maps.DirectionsRenderer(r1); 
                 //   }
        
                
        }); 
         
        
        function uniqBy(a, key) {
    var seen = {};
    return a.filter(function(item) {
        var k = key(item);
        return seen.hasOwnProperty(k) ? false : (seen[k] = true);
    })
}
        
      
      
         function calculateAndDisplayRoute(directionsService, directionsDisplay, pointA, pointB,travel_mode,routeindex,imap) 
       {
         $("#traveltime").text('');
                 $("#routegrp" ).empty();
       //  $("#trafficnews").text('');
         $("#cost").text(''); 
      //   $("#budget").text(budget+ ' $');        
         trafficflag=0;
         var dirseroption={
         origin: pointA,
         destination: pointB,
         provideRouteAlternatives:true,
         travelMode: travel_mode //google.maps.TravelMode.DRIVING
      //   drivingOptions: {
      //     departureTime: new Date(/* now, or future date */)
      //   }

         };
         
         if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT) {
            dirseroption={
               origin: pointA,
               destination: pointB,
               travelMode: 'TRANSIT',
               transitOptions:{
                 modes: ['SUBWAY']  //,
                // routingPreference: 'LESS_WALKING'
               },
               provideRouteAlternatives:true
            };

          }; 
         directionsService.route(dirseroption, function(response, status) {
           if (status === google.maps.DirectionsStatus.OK) {
            polyline = new google.maps.Polyline({
           					path: [],
           					strokeColor: '#0000FF',
           					strokeWeight: 3
           });
           
           trafficpolyline = new google.maps.Polyline({
           					path: [],
           					strokeColor: '#FF0000',
           					strokeWeight: 3
           });    
           var roadresult=response.routes;
           var tmpr=[];
           var qqq;
           if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT) {
   /*hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh*/ 
           ropt=roadresult.length

          for (qqq=0;qqq<ropt;qqq++) 
             tmpr.push(roadresult[qqq]);
       

        var tmpindex=[];
        var li1,li2;
       for (li1=0;li1<ropt;li1++) 
        // for (li2=0;li2<roadresult[0].legs[0].steps.length;li2++)
          if (JSON.stringify(tmpr[li1].legs[0]).indexOf('BUS')!=-1) 
           {
            tmpindex.push(li1);
           // break;          
           }
         //  alert(JSON.stringify(tmpr.length));
           for (var i = tmpindex.length -1; i >= 0; i--)
             tmpr.splice(tmpindex[i],1);
        //     alert(tmpr.length);
             roadresult=[];
             if (tmpr.length>0) roadresult.push(tmpr[0]);
             }
           //  alert(tmpindex.length);
       /*hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh*/ 
         //   alert(JSON.stringify(roadresult)); 
    //      window.open('about:blank').document.body.innerText += JSON.stringify(roadresult);
            if (roadresult.length==0)      $("#startbtn").prop("disabled",true);   
            if (roadresult.length<1) 
				{ $("#budget").text(budget.toFixed(2)+ ' $');
              $("#ttime").text(ttime.toFixed(2) +' min');
              $("#distance").text("");
                 
            return;
            } 
            var ropt=roadresult.length;
            if (ropt>3)  ropt=3;

            var li;
            for (li=0;li<ropt;li++) 
              $("#routegrp").append("<div class='radio-inline'><label><input id='r" + li + "' type='radio' name='optradio' value='" + li+ "'>route " +(li+1)+"</label></div>");
            $("#r" + routeindex).prop("checked", true);
            var myRoute;
            if (roadresult.length>1) myRoute= roadresult[routeindex].legs[0];
            else myRoute= roadresult[0].legs[0];
         //   console.log(JSON.stringify(myRoute.steps));
            if (myRoute.steps.length>1) temp=myRoute.steps[1].start_point; else temp=pointB;
            var bounds = new google.maps.LatLngBounds();
            var tbounds = new google.maps.LatLngBounds();
            var legs;
        //    alert(roadresult.length);

            if (roadresult.length>1)      legs= roadresult[routeindex].legs;
            else legs= roadresult[0].legs;
            totalmilage=parseFloat(roadresult[routeindex].legs[0].distance.text);
       //     alert(totalmilage);
            $("#distance").text(totalmilage+ ' miles');        
            var durationinmin=roadresult[routeindex].legs[0].duration.value/60;
            if (conditionid==1) cost=totalmilage*0.16 +15;
            if (conditionid==4) cost=cost*0.5;
            if (conditionid==2 || conditionid==4 ) durationinmin=durationinmin+totalmilage;
            for (i = 0; i < legs.length; i++) {
              var steps = legs[i].steps;
              for (j = 0; j < steps.length; j++) {
                var nextSegment = steps[j].path;
                for (k = 0; k < nextSegment.length; k++) {
                if ((steps[j].instructions.search('I-66 E')!=-1) && (playsteps>3) &&((conditionid==3 || conditionid==5 )) ) {
            																trafficpolyline.getPath().push(nextSegment[k]);
            																tbounds.extend(nextSegment[k]);
            																trafficflag=1;
            															   }            
                polyline.getPath().push(nextSegment[k]);
                bounds.extend(nextSegment[k]);
               }
             }
            }
            polyline.setMap(imap);


            trafficpolyline.setMap(imap);
            if ( (conditionid==3 || conditionid==5 ) &&trafficflag )  
            durationinmin=durationinmin+30;
            $("#traveltime").text(durationinmin.toFixed(2) + ' min');
            traveltime=durationinmin;
            if (tm==2) cost=0;
            if (tm==3) cost=totalmilage*0.318;
            $("#cost").text(cost.toFixed(2)+ ' $');
            $("#budget").text((budget-cost).toFixed(2)+ ' $');
           
            $("#ttime").text((traveltime+ttime).toFixed(2) +' min');
     
    
    
    } else {
      window.alert('No route is available');
      $("#startbtn").prop("disabled",true);
       $("#budget").text(budget.toFixed(2)+ ' $');
              $("#ttime").text(ttime.toFixed(2) +' min');
              $("#distance").text("");
    }
  });
} ;
               




/*****************************************************************/
       function calculateAndDisplayRoute1(directionsService, directionsDisplay, pointA, pointB,travel_mode,routeindex,imap,mindex) 
       {
       
      
       var funcr='';
       var x;
       var z;
      
         //infowindow.close();
       
         var dirseroption={
         origin: pointA,
         destination: pointB,
         provideRouteAlternatives:true,
         travelMode: travel_mode //google.maps.TravelMode.DRIVING
     
         };
         
         if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT) {
            dirseroption={
               origin: pointA,
               destination: pointB,
               travelMode: 'TRANSIT',
               transitOptions:{
                 modes: ['SUBWAY']  
               },
               provideRouteAlternatives:true
            };

          }; 
          
         directionsService.route(dirseroption, function(response, status) {

           if (status === google.maps.DirectionsStatus.OK) {
         
         funcr=funcr+
         '<tr><td>Car</td><td>'+'</td><td>'+' $</td><td>' + ' min</td></tr>'+
         '<tr><td>Bike</td><td>'+'</td><td>'+' $</td><td>' + ' min</td></tr>'+
         '<tr><td>Metro</td><td>'+'</td><td>'+' $</td><td>' + ' min</td></tr>';
        
          //  if (mindex==0) tr1='<tr><td>Car</td><td>'+vtotalmilage+'</td><td>'+vcost+' $</td><td>' +vtraveltime+  ' min</td></tr>';
         //   if (mindex==1) tr1='<tr><td>Bike</td><td>'+vtotalmilage.toFixed(2)+'</td><td>'+vcost.toFixed(2)+' $</td><td>' +vtraveltime.toFixed(2)+
       //     ' min</td></tr>';
        //    if (mindex==2) tr1='<tr><td>Metro</td><td>'+vtotalmilage.toFixed(2)+'</td><td>'+vcost.toFixed(2)+' $</td><td>' +vtraveltime.toFixed(2)+
       //     ' min</td></tr>';
  //alert(funcr);
 /*    
     if (gtmbtncntr==3) {
     */
      tmpstr='<div id="content">'+ '<table class="table table-striped">'+
'<tr><th>Mode</th><th>Mile</th><th>Cost</th><th>Travel Time</th></tr>'+funcr+'</table></div>';
         var contentString = tmpstr;

         var    iwlatlng = new google.maps.LatLng(38.919652, -76.930737);
          infowindow = new google.maps.InfoWindow({
          content: contentString,
          position:iwlatlng
          });  
        
         infowindow.open(map);
   
            
   
   } 
 //  alert(funcr);

  });
  


//alert(funcr);

} ;
    
    
/******************************************    
    function drawsum()
{
}

   /***************************************************/     
             
       
      function calculateAndDisplayHRoute(directionsService, directionsDisplay, pointA, pointB,travel_mode,routeindex,imap) 
       {
         
         var dirseroption={
         origin: pointA,
         destination: pointB,
         provideRouteAlternatives:true,
         travelMode: travel_mode //google.maps.TravelMode.DRIVING
         };
         
         hpolyline = new google.maps.Polyline({
           					path: [],
           					strokeColor: '#0000FF',
           					strokeWeight: 3
           });
         
         if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT) {
            dirseroption={
               origin: pointA,
               destination: pointB,
               travelMode: 'TRANSIT',
               transitOptions:{
                 modes: ['SUBWAY']  ,
                 routingPreference: 'LESS_WALKING'
               },
               provideRouteAlternatives:true
            };

          }; 
    
         directionsService.route(dirseroption, function(response, status) {
           if (status === google.maps.DirectionsStatus.OK) {
               
           var roadresult=response.routes;
           var tmpr=[];
           var qqq;
           if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT) {
           ropt=roadresult.length

          for (qqq=0;qqq<ropt;qqq++) 
             tmpr.push(roadresult[qqq]);
          var tmpindex=[];
        var li1,li2;
       for (li1=0;li1<ropt;li1++) 
          if (JSON.stringify(tmpr[li1].legs[0]).indexOf('BUS')!=-1) 
           {
            tmpindex.push(li1);
           }
           for (var i = tmpindex.length -1; i >= 0; i--)
             tmpr.splice(tmpindex[i],1);
             roadresult=[];
             if (tmpr.length>0) roadresult.push(tmpr[0]);
             }
           
            var bounds = new google.maps.LatLngBounds();
            var tbounds = new google.maps.LatLngBounds();
            var legs;
            if (roadresult.length>1)      legs= roadresult[routeindex].legs;
            else legs= roadresult[0].legs;
            for (i = 0; i < legs.length; i++) {
              var steps = legs[i].steps;
              for (j = 0; j < steps.length; j++) {
                var nextSegment = steps[j].path;
                for (k = 0; k < nextSegment.length; k++) {
                
                hpolyline.getPath().push(nextSegment[k]);
                bounds.extend(nextSegment[k]);
               }
             }
            }
            hpolyline.setMap(imap);  
      
          } 
  });
} ;
          
       
       /*************************************************/
        
       $('#answerbtn').click(function() {
           
       
          antext=$("#message-text").val().trim();
          if (antext=="") {
            $("#prompterr").text("please explain the bug in details");
            return;          
          }
          else {$('#myModal').modal('toggle');  
             $.ajax({
                   url: 'https://mighty-inlet-46722.herokuapp.com/bugs',
                   dataType: 'json',
		             async : false,
                   type: 'POST',
                   contentType: 'application/json; charset=utf-8',
                   data: JSON.stringify({ "gameid": gameid, "bugdetails":antext}),
                   headers: { 'Authorization' : myObject.auth_token       } 
          }).done(function(msg) {
                  // alert(JSON.stringify(msg));
                   
    		 })
          .fail(function(msg) {
                    alert(JSON.stringify(msg));
          });
      
              }
      });
        
        
          
 
});

     
  
    </script>    
  </body>
</html>
