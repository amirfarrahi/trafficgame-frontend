<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Traffic Game</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="description" content="" />
    <meta name="author" content="amir farrahi" />

    <!-- Le styles -->
<link rel="stylesheet" href="css/bootstrap.min.css" />
     <link rel="stylesheet" href="css/style.css" />


<script>   
 if (sessionStorage.getItem('userinfo') == null) {
        window.location.replace("login.html");
       };
</script>
  


    <!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="../assets/js/html5shiv.js"></script>
    <![endif]-->

    <!-- Fav and touch icons -->
  
 </head>

  <body>
 
    <div class="container">
    <div class="row">
    
    
    
<div class="col-md-3" data-toggle="tooltip" title="The user name associated with your account">
<span class="label label-success" >User Name:</span>
<strong><span id="username" ></span></strong>
</div> 
<div class="col-md-3"><span class="label label-default hidden"> Condition:</span>
<span id="contxt" class="hidden"><strong></strong></span>
<button id="iwo" class="hidden"></button>
<button id="iwc" class="hidden"></button>
<span class="label label-info">Time Elapsed:</span>
<strong><span id="traveltime" ></strong></span>
</div> 
<div class="col-md-3"><span class="label label-default">Distance Traveled:</span>
<strong><span id="distance" ></strong></span>
</div> 
<div class="col-md-3" data-toggle="tooltip" title="The out-of-pocket monetary cost that you have spent in THIS trip">
<span class="label label-default">Money Spent:</span>
<strong><span id="cost" ></strong></span>
</div>


    </div>
        <div class="top-buffer row">
<div class="col-md-3" data-toggle="tooltip" title="The start node of your trip."><span class="label label-info">Origin:</span>
 <strong><span id="origin" ></strong></span>

</div> 
<div class="col-md-3" data-toggle="tooltip" title="The end node of your trip."><span class="label label-info">Destination:</span>
 <strong><span id="destination" ></strong></span>
</div> 
<div class="col-md-3" data-toggle="tooltip" 
title="The time you decide to begin your trip/The virtual time at the moment in the game.">
<span id='dt_ct' class="label label-success"></span><strong>
<span id="currtime" class="hidden"></span></strong>
 <select  id="worktime">
  <option value="6:00">6:00 AM</option>
  <option value="6:15">6:15 AM</option>
  <option value="6:30">6:30 AM</option>    
  <option value="6:45">6:45 AM</option>
  <option value="7:00">7:00 AM</option>
  <option value="7:15">7:15 AM</option>
  <option value="7:30">7:30 AM</option>    
  <option value="7:45">7:45 AM</option>
  <option value="8:00">8:00 AM</option>
  <option value="8:15">8:15 AM</option>
  <option value="8:30">8:30 AM</option>
  <option value="8:45">8:45 AM</option>
  <option value="9:00">9:00 AM</option>
  <option value="9:15">9:15 AM</option>
  <option value="9:30">9:30 AM</option>
  <option value="9:45">9:45 AM</option>
  <option value="10:00">10:00 AM</option>
  <option value="10:15">10:15 AM</option>
  <option value="10:30">10:30 AM</option>
  <option value="10:45">10:45 AM</option>
  <option value="11:00">11:00 AM</option>
  <option value="11:15">11:15 AM</option>
  <option value="11:30">11:30 AM</option>
  <option value="11:45">11:45 AM</option>
  <option value="12:00">12:00 AM</option>                  
</select> 

</div> 
<div class="col-md-3 hidden" data-toggle="tooltip" title="The remaining monetary budget you have. Note that this budget goes with your account and you are going to perform a series of trips with it"><span class="label label-default">Budget:</span>
<span id="budget" class="hidden" ><strong></strong></span>
</div>
<div class="col-md-3">


<a class="btn label label-success" data-toggle="modal" data-target="#loModal">
  Exit
</a>
<a class="btn label label-success" data-toggle="modal" data-target="#AboutusModal">
  About Us
</a>
<a class="btn label label-success" data-toggle="modal" data-target="#loModal">
  Help
</a>

  <button id="showusers" type="button" class="btn btn-primary hidden" data-toggle="tooltip" title="the location of other player(s) that are simultaneously in the game">players location</button>
<div id='somediv'></div>
  <button id="qprompt" type="button" class="btn btn-primary hidden" 
  data-toggle="modal" data-target="#myModal" data-backdrop="static" data-keyboard="false" data-whatever="@mdo">Open modal for @mdo</button>
  <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
           <h4 class="modal-title" id="QuestionLabel">What went wrong?</h4>
        </div>
        <div class="modal-body">
          <form>
             <div id="answergrp" class="form-group">
             <textarea class='form-control' id='message-text'></textarea>          

            </div>
          </form>
        </div>
        <div class="modal-footer">
        <p id="prompterr" class="text-left"></p>
          <button id="answerbtn" type="button" class="btn btn-primary">Submit</button>
          <button id="cancelbtn" type="button" class="btn btn-primary">Cancel</button>
        </div>
      </div>
    </div>
  </div>

</div> 


</div>
<div class="top-buffer row">
<div  class="col-md-3" data-toggle="tooltip" title="The transportation mode that you prefer/decide to use while performing your trip. There are optional routes (if available) under each corresponding travel mode." >
<span class="label label-success">Travel Mode:</span>
<div id="tmbtn" class="btn-group" role="group">
  <button data-tmid="1" id="car" type="button" class="btn btn-default">Car</button>
  <button data-tmid="2" id="bike" type="button" class="btn btn-default">Bike</button>
  <button data-tmid="3" id="pb" type="button" class="btn btn-default">Metro</button>
</div>
</div>
<div class="col-md-3">
<button id="startbtn" class="btn btn-default" type="button" >Go!</button>
</div>
<div class="col-md-4" data-toggle="tooltip" title="The latest weather/incident information impacting your commute.">

<span class="label label-warning">Traffic Info:</span>


  <h4 style="display:inline"><span id="trafficnews" class="label label-danger" ><strong></strong></span></h4>


</div>
<div class="col-md-2" ><span class="hidden label label-default">Time elapsed:</span>
<span class="hidden" id="ttime" ><strong></strong></span>


 <div class="modal fade" id="loModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
       <div class="modal-body">
       <p>Are you sure you want to exit the game? You need to start over again if you log out.</p>       
       </div>
          <div class="modal-footer">
          <button id="logout-ok" type="button" class="btn btn-primary">OK</button>
          <button id="logout-cancel" type="button" class="btn btn-primary">Cancel</button>
        </div>
      </div>
    </div>
  </div>
  
<div class="modal fade" id="AboutusModal" role="dialog">
    <div class="modal-dialog">
     <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <div class="modal-body">
          <p><h4 align="center">Information about the Research Study
Game - Active Transportation and Demand Management (ATDM)
Application of Tools for Tactical and Strategic Decision-making for
Operations / Task 4: Data Collection and Research Plan
Study Number 071614</h4>

<p style="text-align: justify;">This research study is under the direction of Dr. Samer Hamdar of the Department of Civil and Environmental
Engineering, George Washington University, and paid for by the US Department of Transportation. 
Taking part in this research is entirely voluntary. Your academic standing and/or the status of your employment will not,
 in any way, be affected should you choose not to participate or if you decide to withdraw from the study at any time.</p>

<p style="text-align: justify;">The purpose of this study is to provide guidelines on motivations that lead travelers to change 
their behavior when facing some disruptive events with and without Active Transportation and 
Demand Management (ATDM) tools. This will allow devising pricing and information provision strategies 
that lead to a less congested transportation system.</p>

<p style="text-align: justify;">The part of the study consists of participating in an online game offered through the link below. 
The game consists of hypothetical travel choices and questions regarding your socio-economic 
characteristics, your travel patterns, and different attitudes/norms/motivations when faced with 
hypothetical travel conditions. Your answers will be recorded in an anonymous manner where no 
personal/private information will be linked to your answers (for example: email address/name â€¦etc.).
A game instance should take a maximum of 15 minutes. Your answers are expected at the end of the game 
instance.</p>
<p style="text-align: justify;">The total amount of time you will spend in connection with this part of the study will be 
about 45 minutes a week (three game instances per week at your time/discretion and based on your 
schedules/convenience). We do hope you can participate for a total of 6-month duration between December 1st,
2016, and May 31st, 2017. You may refuse to answer any of the questions asked and you may stop your 
participation in this study at any time.</p>

<p style="text-align: justify;">The possible risks you may experience during this study are limited to a minimal risk of 
loss in confidentiality when recording your driving behavioral characteristics in relationship 
with your socio-demographical and physiological characteristics. 
The experiment may be stopped at anytime if any discomfort is felt by the participant.</p>

<p style="text-align: justify;">You will not benefit directly from your participation in the study. The main benefits 
though are to science and to the commuter/traveler population population: this research is 
intended to allow understanding the motivations making some travel decisions even if detrimental 
to the transportation network performance. Such understanding through proper data collection generates 
new knowledge towards devising new demand management strategies leading to better traveler 
responsiveness and a mutually beneficial relationship between the users (i.e. travelers) and 
the suppliers (transportation officials) with less congested and safer surface transportation networks.</p>

<p style="text-align: justify;">Every effort will be made to keep your information confidential, however, this cannot be guaranteed;
 the investigators in this study will not use your name when specifying your socio-demographic 
  characteristics/physiological characteristics. Instead, pseudo-names (usernames) and subject IDs 
will be used to link between the traveler characteristics and the corresponding traveling behavior. 
Finally, all recorded information will be kept on servers and external hard disks owned by 
the George Washington University and used solely for research purposes. 
If results of this research study are reported in journals or at scientific meetings, 
the people who participated in this study will not be named or identified.</p>

<p style="text-align: justify;">The Office of Human Research of George Washington University, at telephone number (202)-994-2715, 
can provide further information about your rights as a research participant. 
Further information regarding this study may be obtained by contacting Dr. Samer Hamdar, 
the research lead investigator, at telephone number (202)-994-6652.</p>

<p style="text-align: justify;">To ensure anonymity, your signature is not required. Your willingness to participate in this research study is implied if you proceed replying to the announcement email or participating in the survey.
*Please keep/print a copy of this document in case you want to read it again.</p>
        </div>
      </div>
    </div>
  </div>  
  
  

</div> 





</div>
<div class="top-buffer row">
<div class="col-md-6">
  <div id="routegrp" class="form-group">
  </div>
</div>



<div class="col-md-4 visual-indicator-holder">

<div class="row">
<span id="minli"></span>
<span>---------------------</span>
<span id="avgli" ></span>
<span>----------------------</span>
<span id="maxli" ></span>


</div>
<div class="row">
<div  class="vi-internal-element" style="width:100%; background: linear-gradient(to right, #FFFFFF  ,#006400,#FFFFFF  );">
    </div>

</div>
   

</div>
<div class="col-md-2">

</div>
</div>
<div class="top-buffer row">


<nav class="navbar navbar-default"> <div class="container-fluid"> 
 <div class="navbar-header"> <strong><a id="hist" class="navbar-brand" href="#">Trip History</a></strong> </div> 
 <div class="col-md-4"> </div>
 <div class="navbar-header"> <strong><a id="main" class="navbar-brand" href="#">Main</a></strong> </div> 
  <div class="col-md-4"> </div>
 <div class="navbar-header" data-toggle="tooltip" title="Location of other players">
<strong> <a id="loc" class="navbar-brand" href="#">Players Location</a></strong> </div> 
 </div> </nav>


<div id="ccc" class="col-md-12 map">
<div id="gmap" class="col-md-12 map">
</div>

       
        
    



<div id="histtab" class="col-md-12"> 
<div id="gmaphist" class="col-md-7 map"></div>
<div  class="col-md-5">
  <table class="table table-stripe">
    <thead>
      <tr>
        <th>Mode</th>
        <th>Distance</th>
        <th>Travel Time</th>
        <th>Cost</th>
      </tr>
    </thead>
    <tbody id="histtable">
    <tr></tr>
        <tr></tr>
            <tr></tr>
                <tr></tr>
    </tbody>
  </table>
</div>
</div>
<div id="gmaploc" class="col-md-12 map"></div>

</div>
<div id="animation" class="col-md-12 hidden"><img id="ride" class="center-block" src="" /></div>
</div>
<div class="row">
<div class="col-md-12 text-center">
<button type="button" class="btn btn-link" data-toggle="modal" data-target="#myModal">report a bug</button>
</div>
</div>




        

    </div> <!-- /container -->

    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->

 
<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
 <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" 
 crossorigin="anonymous"></script>
 <script src="js/moment.js"></script>

      <script>
    
var map;
var hr=0;
var pretmcar=0;
var routeselectedindex=0;
var worktime;
var totalmilage=0;
var ttime=0;
var currenttime=-1;
var start;
var pretripcost;
var pretripmile;
var polyline,trafficpolyline;
var myLatlng;
var srcmyLatlng=-1;
var desmyLatlng=-1;
var desmarker;
var srcmarker;
var curlocmarker;
var conditionid,tm;
var gameid=-1;
var lu=0;
var qid=-1;
var trafficnews="";
var anid=-1;
var antext="";
var antype="";
var budget=100;
var cost=0;
var traveltime=0;
var index=0;
var nextnode;
var r1,r2;
var gtm=-1;
var tm=0;
var baseurl='https://mighty-inlet-46722.herokuapp.com'; //baseurl + '';
var tmname="";
var tmimagelink;
var gtime;
var startnode,endnode,currnode;
var directionsService,directionsService2,directionsServicehist;
var directionsDisplay1,directionsDisplay2;
var curredge=-1;
var edgeaccind=-1;
var kir=-1;
var temp;
var delay=0;
var trafficflag;
var playsteps=0;
var iconBase = 'https://maps.google.com/mapfiles/kml/shapes/';
var fttime=0;
var fttimemin=0;
var fttimemax=0;
var sss;
var cnt;
var predistance=0;
var precost=0;
var pretraveltime=0.0;
var pbflag=0;
var bikeflag=0;
var infowindow;
var markersArray = [];


      function initMap() {
        myLatlng = new google.maps.LatLng(38.9072, -77.0369);
        map = new google.maps.Map(document.getElementById('gmap'), {
          center: myLatlng,
          zoom: 11,
          zoomControl: true
        });
        var myLatlng1 = new google.maps.LatLng(38.9072, -77.0369);
         hmap = new google.maps.Map(document.getElementById('gmaphist'), {
          center: myLatlng1,
          zoom: 11,
          zoomControl: true
        }); 
        var uloclatloncntr=new google.maps.LatLng(38.8992646,  -77.1549962);
        maploc = new google.maps.Map(document.getElementById('gmaploc'), {
          center: uloclatloncntr,
          zoom: 11,
          zoomControl: true
        });
        directionsService = new google.maps.DirectionsService;
        directionsServicehist = new google.maps.DirectionsService;
        directionsService2 = new google.maps.DirectionsService;
        directionsDisplay = new google.maps.DirectionsRenderer();
        directionsDisplay1 = new google.maps.DirectionsRenderer();
        directionsDisplay2 = new google.maps.DirectionsRenderer();
        directionsDisplayloc = new google.maps.DirectionsRenderer();
        directionsDisplayhist = new google.maps.DirectionsRenderer();

        directionsDisplay1.setMap(map);
        directionsDisplay2.setMap(map);
        directionsDisplayloc.setMap(maploc);
        directionsDisplayhist.setMap(hmap);
        
        
        google.maps.event.addListener(map, 'idle', function(){
              if (tm==0) { $("#car").click();
              
    var    iwlatlng = new google.maps.LatLng(38.919652, -76.930737);
           infowindow = new google.maps.InfoWindow({
            content: '',
          position:iwlatlng
          });  
       
             
         infowindow.open(map); 
google.maps.event.addListener(infowindow,'closeclick',function(){
         infowindow.open(map); 
});
               
         }

              });

       
      };


           
              

  

    $( document ).ready(function() {


$("#worktime" ).change(function() {
  if (tm==1) $("#car").click();
  if (tm==2) $("#bike").click();
  if (tm==3) $("#pb").click();
});

    $("#budget").text('$ '+ budget);
    $("#dt_ct").text("Departure Time:");
    $("#trafficnews").text("no traffic news availible");
 

    $('#desbtn').prop("disabled",true);
    $("#startbtn").prop("disabled",true);
    var uinfo=sessionStorage.getItem('userinfo');
    sessionStorage.setItem('userinfo', uinfo);
    var myObject = JSON.parse(uinfo);
     $("#username").text(myObject.name);
   sss=(Math.floor(Math.random() * 8) + 1).toString();
   var eee=(Math.floor(Math.random()*(10-9+1)+9)).toString();


         $.ajax({
                   url: baseurl + '/nodes/1' /*+sss*/,
                   dataType: 'json',
                   type: 'GET',
                   async: true,
                   headers: { 'Authorization' : myObject.auth_token       },
                   contentType: 'application/json; charset=utf-8'
               
                }).done(function(data) {

                      $("#origin").text(data.name);  
                      if (srcmarker!=null) srcmarker.setMap(null);

                      var lat=parseFloat(data.lat);
          				 var lon=parseFloat(data.lon);


          				 srcmyLatlng = new google.maps.LatLng(lat,lon);
          				 start = srcmyLatlng;
          				// alert(start.lat());
          				 srcmarker = new google.maps.Marker({
          				 position: srcmyLatlng,
          				 title:data.name//,
          			//	 icon: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=' + data.name + '|FF0000|000000'
                      });
                      srcmarker.setMap(map);  
          
                      startnode=data.name;
                      currnode=startnode;
                             $.ajax({
                   url: baseurl + '/updateuserloc',
                   dataType: 'json',
		             type: 'PUT',
                   contentType: 'application/json; charset=utf-8',
                   data: JSON.stringify({ "lat": start.lat(), "lon": start.lng() }),
                   headers: { 'Authorization' : myObject.auth_token       } 
                 }).done(function(msg) {
                  // alert(JSON.stringify(msg));
                   if (curlocmarker!=null) curlocmarker.setMap(null);
                   curlocmarker= new google.maps.Marker({
            					position: start,
            					icon: 'img/cr.png' //iconBase + 'library_maps.png'
 
                   });
                   curlocmarker.setMap(map);
                   
    		        })
                 .fail(function(msg) {
                    alert(JSON.stringify(msg));
                 });
     
                 })
                  .fail(function(msg) {
             //     alert("failed");
                  alert(JSON.stringify(msg));
                             
                  });
          
                  
         $.ajax({
                   url: baseurl + '/nodes/9',
                   dataType: 'json',
                   type: 'GET',
                   async: true,
                   headers: { 'Authorization' : myObject.auth_token       },
                   contentType: 'application/json; charset=utf-8'
               
                }).done(function(data) {

                      $("#destination").text(data.name);
                      if (desmarker!=null) desmarker.setMap(null);
          
                      var lat=parseFloat(data.lat);
          				 var lon=parseFloat(data.lon);

          				 desmyLatlng = new google.maps.LatLng(lat,lon);
          				 desmarker = new google.maps.Marker({
          				 position: desmyLatlng,
          				 title:data.name//,
          				// icon: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=' + data.name + '|FF0000|000000'
       
          				 });
          				 desmarker.setMap(map); 
          				 endnode=data.name;  
     
                 })
                  .fail(function(msg) {
                  alert("failed");
                             
                 });
                  
         $.ajax({
                   url: baseurl + '/activeconditions',
                   dataType: 'json',
                   type: 'GET',
                   async: true,
                   headers: { 'Authorization' : myObject.auth_token       },
                   contentType: 'application/json; charset=utf-8'
               
                }).done(function(data) {
                   $("#contxt").text(data[0].name);
                   conditionid=data[0].id;
                   

                   if (conditionid==2)     $("#trafficnews").text("Inclement weather! Drive carefully.");

                   if (conditionid==4)     $("#trafficnews").text("Inclement weather! 50% on transit.");

                  

             
                 })
                  .fail(function(msg) {
                  alert("faileeeed");
                             
                  });                  
                  
                         $.ajax({
                   url: baseurl + '/getuserhrrate',
                   dataType: 'json',
                   type: 'GET',
                   async: true,
                   headers: { 'Authorization' : myObject.auth_token       },
                   contentType: 'application/json; charset=utf-8'
               
                }).done(function(data) {
                   hr=data.hrrate; 
                  // alert(hr);               

             
                 })
                  .fail(function(msg) {
                  alert("failed");
                             
                  });  
                  
       
         
             
                    $("#gmaploc").hide();
                    $("#histtab").hide(); 
      
       $('#myModal').on('hidden.bs.modal', function () {

        $(this).removeData();
    //     alert("hi");
       });
       
       $('#hist').click(function() {
$("#gmap").hide();
$("#gmaploc").hide();
$("#histtab").show();
var center=hmap.getCenter();
google.maps.event.trigger(hmap, 'resize');
hmap.setZoom( hmap.getZoom() );
hmap.setCenter(center);
//$('#gmap').css('display','none');
//$("#gmaploc").hide();
//$('#gmaploc').css('display','none');
      //   $("#gmap").addClass('hidden');
      //   $("#gmaploc").addClass('hidden');
      //  $("#histtab").removeClass('hidden');
       });
        $('#loc').click(function() {
        
            $("#gmap").hide();
            $("#histtab").hide();
           $("#gmaploc").show();//removeClass('hidden');
           var center=maploc.getCenter();   
google.maps.event.trigger(maploc, 'resize');
maploc.setZoom( maploc.getZoom() ); 
        maploc.setCenter(center);
         
         
              for (i in markersArray) {
                markersArray[i].setMap(null);
               }
              $.ajax({
                   url: baseurl + '/listuserloc',
                   dataType: 'json',
                   type: 'GET',
                   async: false,
                   headers: { 'Authorization' : myObject.auth_token       },
                   contentType: 'application/json; charset=utf-8'
               
                }).done(function(data) {
                   // alert(JSON.stringify(data.usersloc));
                    var userslocations=data.usersloc;
                    var umarker,ulat,ulon,uLatlng;
                  $.each(userslocations, function(index) {
                       ulat=parseFloat(userslocations[index].location[0]);
                       ulon=parseFloat(userslocations[index].location[1]);
                       uLatlng = new google.maps.LatLng(ulat,ulon);
                     //  alert(userslocations[index].name);
                      var  marker =  new google.maps.Marker({
            					position: uLatlng,
            					map: maploc,
            					label:  userslocations[index].name 
                });
                      markersArray.push(marker);
                      
                  });
                })
                  .fail(function(msg) {
               alert(JSON.stringify(msg));
                  
                             
                  }); 
           
                    
        
        
           
       });
       $('#main').click(function() {
         $("#histtab").hide();//addClass('hidden');
                  $("#gmaploc").hide();//addClass('hidden');
         $("#gmap").show();//removeClass('hidden');

           var center=map.getCenter();   
google.maps.event.trigger(map, 'resize');
map.setZoom( map.getZoom() ); 
        map.setCenter(center);

       });



/*************************/
             
  
/**************************/

        $('#startbtn').click(function() {
              $("#dt_ct").text("Current Time:");
              $("#worktime").addClass('hidden');
              $("#currtime").removeClass('hidden');
              if (playsteps==0) currenttime=gtime;
              $("#currtime").text(currenttime.toLocaleTimeString());
              
              if (tm==1) pretmcar=1;
              if ((tm!=1) && (pretmcar==1)) precost=precost+5;
              $("#worktime").prop("disabled",true);
              gtmbtncntr=0;
              playsteps=playsteps+1;
              pregoogetripmile=totalmilage;
              $("#startbtn").prop("disabled",true);
              if (tm==2) bikeflag=1; //$("#car").prop("disabled",true);
              if (tm==3) pbflag=1;//$("#car").prop("disabled",true);
              $("#ccc").hide();//addClass('hidden');
              budget=(budget-cost).toFixed(2);
              $("#budget").text('$ ' + budget );
              ttime=traveltime+ttime;
              $("#ttime").text(ttime.toFixed(2) +' min');
              $("#animation").removeClass('hidden');
              $('#ride').attr("src",tmimagelink);
              $("#routegrp").addClass('hidden');
              if (playsteps==1) $("#histtable").empty();
              if ((conditionid==5) && (trafficflag )) {
                  var sysdate=new Date()
                  var pieces = worktime.trim().split(':')
                  var hhdiff=(Number(pieces[0])-sysdate.getHours())*60;
                  var mindiff=(Number(pieces[1])-sysdate.getMinutes());
                  var timediffinmin=hhdiff+mindiff;
                  delay=timediffinmin-traveltime;
                  if ((delay<0) && (playsteps>3)) $("#trafficnews").text((delay*-1).toFixed(2) + ' min delay / loosing ' + (delay*-1/60*hr).toFixed(2)+'$');
               };
               if ((conditionid==3) && (playsteps>3)) $("#trafficnews").text("Accident on I-66 expect delays");
              
          if (playsteps==1)  

          $.ajax({
                   url: baseurl + '/games',
                   dataType: 'json',
		             type: 'POST',
                   contentType: 'application/json; charset=utf-8',
                   data: JSON.stringify({'condition_id': conditionid,'origin':sss, 'destination':9,
                    'current_loc_lat':start.lat(), 'current_loc_lon':start.lng(), 'travel_mode':tm,
                    'departure_time': gtime.toString(), 'car_best_opt':$("#infowindowcarrow").text(), 
                    'bike_best_opt':$("#infowindowbikerow").text(),
                     'metro_best_opt':$("#infowindowmetrorow").text() }),
                   headers: { 'Authorization' : myObject.auth_token       } 
          }).done(function(msg) {
          sessionStorage.setItem('gameinfo', JSON.stringify(msg));
                   gameid=msg.id;

                   
    		 })
          .fail(function(msg) {
                      
                    alert(JSON.stringify(msg));
          });
          else   $.ajax({
                   url: baseurl + '/games/'+gameid,
                   dataType: 'json',
		             type: 'PUT',
                   contentType: 'application/json; charset=utf-8',
                   data: JSON.stringify({  'current_loc_lat':start.lat(), 
                   'current_loc_lon':start.lng(), 'travel_mode':tm,
                    'departure_time': gtime.toString(), 'car_best_opt':$("#infowindowcarrow").text(), 
                    'bike_best_opt':$("#infowindowbikerow").text(),
                     'metro_best_opt':$("#infowindowmetrorow").text() }),
                   headers: { 'Authorization' : myObject.auth_token       } 
                 }).done(function(msg) {
                  
                   
    		        })
                 .fail(function(msg) {
                    alert(JSON.stringify(msg));
                 });
          
          
               
               
               
               setTimeout(revert, 5000);
                          
       });       
                  
       $('#desmenu li').click(function() {


          if (desmarker!=null) desmarker.setMap(null);
          
          var lat=parseFloat(this.getAttribute("data-lat"));
          var lon=parseFloat(this.getAttribute("data-lon"));

          desmyLatlng = new google.maps.LatLng(lat,lon);
          desmarker = new google.maps.Marker({
          position: desmyLatlng,
          title:this.getAttribute("data-name"),
       //   icon: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=' + this.getAttribute("data-name") + '|FF0000|000000'
       
          });
          desmarker.setMap(map); 
          $("#desbtn").text(this.getAttribute("data-name")); 
          endnode=this.getAttribute("data-name");
       });
       
       $('#srcmenu li').click(function() {
         
       if (srcmarker!=null) srcmarker.setMap(null);

          var lat=parseFloat(this.getAttribute("data-lat"));
          var lon=parseFloat(this.getAttribute("data-lon"));

          srcmyLatlng = new google.maps.LatLng(lat,lon);
          start = srcmyLatlng;
          srcmarker = new google.maps.Marker({
          position: srcmyLatlng,
          title:this.getAttribute("data-name"),
    //      icon: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=' + this.getAttribute("data-name") + '|FF0000|000000'
          });
          srcmarker.setMap(map);  
          $("#srcbtn").text(this.getAttribute("data-name"));
          startnode=this.getAttribute("data-name");
          currnode=startnode;
       });
      
           

       $('#showusers').click(function() {
     //    alert("test");
          window.open('map.html', 'window name', 'window settings'); 
       });
       

        function leave(){
        

        sessionStorage.setItem('gameinfo',JSON.stringify({'game_id':gameid})) ;

          window.location.href='page2.html';
        };

        var add_minutes =  function (dt, minutes) {  
          return new Date(dt.getTime() + minutes*60000);  
        } 


        function revert(){
              lu=0;

             $("#ccc").show();//removeClass('hidden');
             $("#animation").addClass('hidden');
             $("#routegrp").removeClass('hidden');
             $('#pb').prop("disabled",false);
			    $('#bike').prop("disabled",false);
			    $('#car').prop("disabled",false);
         
               if ((pretmcar==1) && (tm!=1)) pretmcar=0;


               if ((start==desmyLatlng) && (tm==1)) precost=precost+15; 
               if ( tm==3) { predistance=totalmilage;
                             precost=cost;
                             kir=traveltime;
                             temp=desmyLatlng;
               }   ;
            //   alert(kir);
            //   alert(currenttime);
              currenttime= add_minutes(currenttime,kir);
         $("#currtime").text(currenttime);

              $('#histtable').append("<tr><td>"+ tmname +"</td><td>"+ predistance.toFixed(2)  +" miles</td><td>"
               + kir.toFixed(2) +" min</td><td>"+ precost.toFixed(2) + " $</td></tr>");
             calculateAndDisplayHRoute(directionsServicehist, directionsDisplayhist, start,temp,gtm,routeselectedindex,hmap);
           
             if (tm==3) start=desmyLatlng;
             else start=temp;    
                 $.ajax({
                   url: baseurl + '/updateuserloc',
                   dataType: 'json',
		             type: 'PUT',
                   contentType: 'application/json; charset=utf-8',
                   data: JSON.stringify({ "lat": start.lat(), "lon": start.lng() }),
                   headers: { 'Authorization' : myObject.auth_token       } 
                 }).done(function(msg) {
                  // alert(JSON.stringify(msg));
                   if (curlocmarker!=null) curlocmarker.setMap(null);
                   curlocmarker= new google.maps.Marker({
            					position: start,
            					icon: 'img/cr.png' //iconBase + 'library_maps.png'
 
                   });
                   curlocmarker.setMap(map);
                   
    		        })
                 .fail(function(msg) {
                    alert(JSON.stringify(msg));
                 });
             
             
             if (start==desmyLatlng) {
               $("#gmap").removeClass('hidden');
               infowindow.close();
               $("#tmbtn button").prop("disabled",true);
               $("#traveltime").text('');
               $("#cost").text('');
               $("#startbtn").prop("disabled",true);
               $("#trafficnews").text('');
               $("#distance").text("");
                var contentString = '<div id="content">'+
            'You have reached your destination; please click <a href="page2.html">here</a> to answer a post-game survey</div>';
                  $.ajax({
                   url: baseurl + '/games/'+gameid,
                   dataType: 'json',
		             type: 'PUT',
                   contentType: 'application/json; charset=utf-8',
                   data: JSON.stringify({  'current_loc_lat':start.lat(), 
                   'current_loc_lon':start.lng()
                    }),
                   headers: { 'Authorization' : myObject.auth_token       } 
                 }).done(function(msg) {
                      $("#startbtn").prop("disabled",true);
                           var winfowindow = new google.maps.InfoWindow({
          content: contentString,
          position:desmyLatlng
          });  
          winfowindow.open(map);
          
               return;
                   
    		        })
                 .fail(function(msg) {
                    alert(JSON.stringify(msg));
                 });

   
              };
              
                

               if (tm==1) $("#car").click();
               if (tm==2) $("#bike").click();
               if (tm==3) $("#pb").click();
         

        }
         
       $("#cancelbtn").click(function() {
         $('#myModal').modal('toggle');  
       });       


 $("#logout-cancel").click(function() {
$('#loModal').modal('toggle'); 
 });
 
 
 $("#logout-ok").click(function() {
  $('#loModal').modal('toggle'); 
  sessionStorage.setItem('userinfo',null) ;
   window.location.replace("login.html");
 }); 
       $("#tmbtn button").click(function() {
          if (($("#worktime").val().length==0) && (conditionid==5 )) 
          {alert('Enter your departure time');
           return false;
          };
          if ((conditionid==5) && (!$("#worktime")[0].checkValidity())) {
             alert('work start time is invalid');
             return false;
          }
          worktime=$("#worktime").val();
          var hhmm= worktime.split(':')
          gtime = new Date();
          gtime.setDate(gtime.getDate() + 1);
          gtime.setHours(hhmm[0],hhmm[1],00);
      //    alert(gtime);
          var b1 = document.getElementById("bike");
          var b2 = document.getElementById("car");
          var b3 = document.getElementById("pb");
          b1.style.background = "white";            
          b2.style.background = "white";            
          b3.style.background = "white"; 
          document.getElementById(this.id).style.background="olive";           
          tm=this.getAttribute("data-tmid") ;  
           if (tm==1) { gtm=google.maps.DirectionsTravelMode.DRIVING;
                        tmimagelink='img/car.gif';
                        tmname='car';
           }
           if (tm==2) { gtm=google.maps.DirectionsTravelMode.BICYCLING;
           					//$('#ride').attr("src",'img/bike.jpg');
           					tmimagelink='img/bike.jpg';
           					tmname='bike';
           }
           if (tm==3) { gtm=google.maps.DirectionsTravelMode.TRANSIT;
                        //$('#ride').attr("src",'img/bus.gif');
                        tmimagelink='img/bus.gif';   
                        tmname='Metro';        
           }
        if(polyline!= null)  polyline.setMap(null);
        if(trafficpolyline!= null)  trafficpolyline.setMap(null);
        cnt=[];
        var w='';
  if (lu==0) {
calculateAndDisplayRoute(directionsService,directionsDisplay1,start,desmyLatlng,
google.maps.DirectionsTravelMode.DRIVING,0,map,false,function(a,b,c,d,e,f){
  if (a!=-1) {w='<tr id="infowindowcarrow"><td>Car</td>';
             w=w+ '<td>'+b.toFixed(2)+' mile</td>' +
                  '<td>$ '+a.toFixed(2)+'</td>'+
                  '<td>'+c.toFixed(2) +' min</td>'+
                  '<td>'+d.toFixed(2) +' min</td>'+
                  '<td>'+e.toFixed(2) +' min</td>'+
                  '<td>'+f.toFixed(2) +' min</td>'+              
                  '</tr>';}
       else  $('#car').prop("disabled",true);

calculateAndDisplayRoute(directionsService,directionsDisplay1,start,desmyLatlng,
google.maps.DirectionsTravelMode.BICYCLING,0,map,false,function(a,b,c,d,e,f){
  if (a!=-1) {w=w+'<tr id="infowindowbikerow"><td>Bike</td>';
             w=w+ '<td>'+b.toFixed(2)+' mile</td>' +
                  '<td>$ '+a.toFixed(2)+'</td>'+
                  '<td>'+c.toFixed(2) +' min</td>'+
                  '<td>'+d.toFixed(2) +' min</td>'+
                  '<td>'+e.toFixed(2) +' min</td>'+
                  '<td>'+f.toFixed(2) +' min</td>'+                
                  '</tr>';}
                  else    $('#bike').prop("disabled",true);
calculateAndDisplayRoute(directionsService,directionsDisplay1,start,desmyLatlng,
google.maps.DirectionsTravelMode.TRANSIT,0,map,false,function(a,b,c,d,e,f){
  if (a!=-1)  {w=w+'<tr id="infowindowpbrow"><td>Metro</td>';
             w=w+ '<td>'+b.toFixed(2)+' mile</td>' +
                 '<td>$ '+a.toFixed(2)+'</td>'+
                  '<td>'+c.toFixed(2) +' min</td>'+
                  '<td>'+d.toFixed(2) +' min</td>'+
                  '<td>'+e.toFixed(2) +' min</td>'+
                  '<td>'+f.toFixed(2) +' min</td>'+
                  '</tr>';}
    else $('#pb').prop("disabled",true);

 calculateAndDisplayRoute(directionsService,directionsDisplay1,start,desmyLatlng,gtm,0,map,true,function(a,b,c){
     
     var contentString='<div id="content">'+'<table class="table table-striped">'+
'<tr><th>Mode</th><th>Mile</th><th>Cost</th><th>Travel Time</th><th>TTR Min</th>'+
'<th>TTR Avg</th><th>TTR Max</th></tr>'+w+'</table></div>';

        infowindow.setContent(contentString);  
         if ((pbflag==1) ||  (bikeflag==1)) {
              $('#car').prop("disabled",true);
              $("#infowindowcarrow").empty();
        }   
        if (w.length==0)  $("#startbtn").prop("disabled",true);    
        lu++;
     $("#startbtn").prop("disabled",false);
        });
            });            
            });       
            });
            
      } else
      calculateAndDisplayRoute(directionsService,directionsDisplay1,start,desmyLatlng,gtm,0,map,true,function(a,b,c){
     
   
     $("#startbtn").prop("disabled",false);


      
        });
 

       });
       
        var t1,t2;
       $(document).on('change', 'input:radio[id^="r"]', function (event) {
      

         if ( srcmyLatlng==-1 || desmyLatlng==-1 || gtm==-1) 
          {          
          alert('choose source, destination and travel mode');
          $("#r1").attr('checked', false);
          $("#r2").attr('checked', false);
          return false;
          }
        if(polyline!= null)  polyline.setMap(null);
        if(trafficpolyline!= null)  trafficpolyline.setMap(null);

       routeselectedindex=this.value;
       calculateAndDisplayRoute(directionsService,directionsDisplay1,start,desmyLatlng,gtm,this.value,map,true,function(a,b,c){});


                          $("#startbtn").prop("disabled",false);



    
        
                
        }); 
         
  
  
         	function mycomparator(a,b) {
  					return parseInt(a.legs[0].duration.value, 10) - parseInt(b.legs[0].duration.value, 10);
				}
      
      
         function calculateAndDisplayRoute(directionsService, directionsDisplay, pointA, pointB,travel_mode,
         routeindex,imap,draw,callbackfunc) 
       {
  
         cost=-1;
         totalmilage=-1;
         traveltime=-1;
         fttime=-1;
         fttimemin=-1;
         fttimemax=-1;
         $("#traveltime").text('');
         $("#routegrp" ).empty();
         $("#cost").text(''); 

         trafficflag=0;
         var dirseroption={
         origin: pointA,
         destination: pointB,
         provideRouteAlternatives:true,
         travelMode: travel_mode,
         drivingOptions: {
           departureTime: gtime,
           trafficModel: 'pessimistic'
         }
         };
       //  alert(dirseroption);
         if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT) {
            dirseroption={
               origin: pointA,
               destination: pointB,
               travelMode: 'TRANSIT',
               transitOptions:{
                 modes: ['SUBWAY']  //,
                // routingPreference: 'LESS_WALKING'
               },
               provideRouteAlternatives:true
            };

          }; 
         directionsService.route(dirseroption, function(response, status) {
           if (status === google.maps.DirectionsStatus.OK) {
            polyline = new google.maps.Polyline({
           					path: [],
           					strokeColor: '#0000FF',
           					strokeWeight: 3
           });
           
           trafficpolyline = new google.maps.Polyline({
           					path: [],
           					strokeColor: '#FF0000',
           					strokeWeight: 3
           });    
           var roadresult=response.routes;
           var tmpr=[];
           var qqq;
           if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT) {
   /*hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh*/ 
           ropt=roadresult.length

          for (qqq=0;qqq<ropt;qqq++) 
             tmpr.push(roadresult[qqq]);
       

        var tmpindex=[];
        var li1,li2;
       for (li1=0;li1<ropt;li1++) 
        // for (li2=0;li2<roadresult[0].legs[0].steps.length;li2++)
          if (JSON.stringify(tmpr[li1].legs[0]).indexOf('BUS')!=-1) 
           {
            tmpindex.push(li1);
           // break;          
           }
         //  alert(JSON.stringify(tmpr.length));
           for (var i = tmpindex.length -1; i >= 0; i--)
             tmpr.splice(tmpindex[i],1);
        //     alert(tmpr.length);
             roadresult=[];
             if (tmpr.length>0) roadresult.push(tmpr[0]);
             }
             
           //  alert(tmpindex.length);
       /*hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh*/ 
         //   alert(JSON.stringify(roadresult)); 
    //      window.open('about:blank').document.body.innerText += JSON.stringify(roadresult);
         //   if (roadresult.length==0)      $("#startbtn").prop("disabled",true);   
            if (roadresult.length<1) 
				{ 
              $("#distance").text("");
              if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT)  $('#pb').prop("disabled",true);
			     if (travel_mode==google.maps.DirectionsTravelMode.BICYCLING)  $('#bike').prop("disabled",true);
			     if (travel_mode==google.maps.DirectionsTravelMode.DRIVING)  $('#car').prop("disabled",true);
              callbackfunc(-1,-1,-1,-1,-1,-1);
            return;
            } 
            var ropt=roadresult.length;
            
            if (ropt>3)  ropt=3;

             var myRoute;
          //  roadresult[routeindex].legs[0].duration.value
			     //       roadresult.sort(mycomparator);
            
            if (roadresult.length>1) myRoute= roadresult[routeindex].legs[0];
            else myRoute= roadresult[0].legs[0];

            if (myRoute.steps.length>1) temp=myRoute.steps[1].start_point; else temp=pointB;
            predistance=parseFloat(roadresult[routeindex].legs[0].steps[0].distance.value*0.000621371);
           var bounds = new google.maps.LatLngBounds();
            var tbounds = new google.maps.LatLngBounds();
            var legs;


            if (roadresult.length>1)      legs= roadresult[routeindex].legs;
            else legs= roadresult[0].legs;
            
            totalmilage=roadresult[routeindex].legs[0].distance.value*0.000621371;
         
            $("#distance").text(totalmilage.toFixed(2)+ ' miles');        
            var durationinmin=roadresult[routeindex].legs[0].duration.value/60;
            var pretraveltime=myRoute.steps[0].duration.value/parseFloat(60);
            kir=pretraveltime;

     
              if (travel_mode==google.maps.DirectionsTravelMode.DRIVING) {
            
              cost=totalmilage*0.16 +15;
              precost=predistance*0.16 };
         //      alert(totalmilage + ',' + cost +',' + conditionid + ',' + tm);
            
            if (conditionid==4) { 
              precost=precost*0.5;
              cost=cost*0.5;
            }
            if (conditionid==2 || conditionid==4 )  {
              durationinmin=durationinmin+totalmilage;
              pretraveltime=pretraveltime+predistance;
            }
            for (i = 0; i < legs.length; i++) {
              var steps = legs[i].steps;
              for (j = 0; j < steps.length; j++) {
                var nextSegment = steps[j].path;
                for (k = 0; k < nextSegment.length; k++) {
                if ((steps[j].instructions.search('I-66 E')!=-1) && (playsteps>3) &&((conditionid==3 || conditionid==5 )) ) {
            																trafficpolyline.getPath().push(nextSegment[k]);
            																tbounds.extend(nextSegment[k]);
            																trafficflag=1;
            															   }            
                polyline.getPath().push(nextSegment[k]);
                bounds.extend(nextSegment[k]);
               }
             }
            }
            
            if (draw) {
              var li;
            for (li=0;li<ropt;li++) 
              $("#routegrp").append("<div class='radio-inline'><label><input id='r" + 
              li + "' type='radio' name='optradio' value='" + li+ "'>route " +(li+1)+"</label></div>");
            $("#r" + routeindex).prop("checked", true);
         
             polyline.setMap(imap);
             trafficpolyline.setMap(imap);
            }
            if ( (conditionid==3 || conditionid==5 ) &&trafficflag )  
            durationinmin=durationinmin+30;
            $("#traveltime").text(durationinmin.toFixed(2) + ' min');
            var std=3;
            var cof=0.14;
            var meanco=1;
            var constant=0;
            if (((conditionid==2) || (conditionid==4)) && (travel_mode==google.maps.DirectionsTravelMode.DRIVING)) { 
              cof=0.11;
              meanco=1.25;
            }
            if (((conditionid==3) || (conditionid==5)) && (travel_mode==google.maps.DirectionsTravelMode.DRIVING)) { 
               cof=0.30;
               meanco=1.92;
              
            
            }
            if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT) {
                meanco=1;  
                std=0;
                cof=1;
               constant=3;          
            }
            
            fttime=meanco*durationinmin;
        
            fttimemin=meanco*durationinmin*(1-std*cof)-constant;
            fttimemax=meanco*durationinmin*(1+std*cof)+constant;
            
            $("#avgli").html(fttime.toFixed(2) + ' min');
            $("#minli").html(fttimemin.toFixed(2) + ' min');
            $("#maxli").html(fttimemax.toFixed(2) + ' min');
            
            traveltime=durationinmin;
            if (travel_mode==google.maps.DirectionsTravelMode.BICYCLING) { 
              cost=0;
              precost=0;
            }
            if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT)  {
              cost=totalmilage*0.318;
              precost=predistance*0.318;
            }
            if ((pretmcar==1) && (travel_mode!=google.maps.DirectionsTravelMode.DRIVING)) {cost=cost+5;

            }
            $("#cost").text('$ '+ cost.toFixed(2));
            $("#budget").text('$ ' + (budget-cost).toFixed(2) );
           
            $("#ttime").text((traveltime+ttime).toFixed(2) +' min');


         if (tm==1)   { $("#infowindowcarrow").empty();
                        $("#infowindowcarrow").append('<td>Car</td><td>'+totalmilage.toFixed(2)+' mile</td>' 
                        +'<td>$ '+cost.toFixed(2)+'</td><td>' +
                        traveltime.toFixed(2) +' min</td>'+
                        '<td>'+fttimemin.toFixed(2) +' min</td>'+
                        '<td>'+fttime.toFixed(2) +' min</td>'+
                        '<td>'+fttimemax.toFixed(2) +' min</td>'+                          
                        '</tr>');
                      };
         if (tm==2)   { $("#infowindowbikerow").empty();
                        $("#infowindowbikerow").append('<td>Bike</td><td>'+totalmilage.toFixed(2)+' mile</td>' 
                        +'<td>$ '+cost.toFixed(2)+'</td><td>' +
                        traveltime.toFixed(2) +' min</td>'+
                        '<td>'+fttimemin.toFixed(2) +' min</td>'+
                        '<td>'+fttime.toFixed(2) +' min</td>'+
                        '<td>'+fttimemax.toFixed(2) +' min</td>'+                          
                        '</tr>');
                      };
         if (tm==3)   {$("#infowindowpbrow").empty();
                       $("#infowindowpbrow").append('<td>Metro</td><td>'+totalmilage.toFixed(2)+' mile</td>' 
                        +'<td>$ '+cost.toFixed(2)+'</td><td>' +
                        traveltime.toFixed(2) +' min</td>'+
                        '<td>'+fttimemin.toFixed(2) +' min</td>'+
                        '<td>'+fttime.toFixed(2) +' min</td>'+
                        '<td>'+fttimemax.toFixed(2) +' min</td>'+                        
                        '</tr>');
                      };
    
 
    } else {
     // window.alert('No route is available');
      $("#startbtn").prop("disabled",true);
    
    }
          
          
         //     alert(cost);
			   callbackfunc(cost,totalmilage,traveltime,fttimemin,fttime,fttimemax);

         
  });
} ;
               




/*****************************************************************/
     
    
    
/******************************************    
    function drawsum()
{
}

   /***************************************************/     
             
       
      function calculateAndDisplayHRoute(directionsService, directionsDisplay, pointA, pointB,travel_mode,routeindex,imap) 
       {
         
         var dirseroption={
         origin: pointA,
         destination: pointB,
         provideRouteAlternatives:true,
         travelMode: travel_mode, 
           drivingOptions: {
           departureTime: gtime,
           trafficModel: 'pessimistic'

         }
         };
         var linkcolor='#0000FF';
         if (travel_mode==google.maps.DirectionsTravelMode.BICYCLING) linkcolor='#008000';
         if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT) linkcolor='#737373';
         hpolyline = new google.maps.Polyline({
           					path: [],
           					strokeColor: linkcolor,
           					strokeWeight: 3
           });
         
         if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT) {
            dirseroption={
               origin: pointA,
               destination: pointB,
               travelMode: 'TRANSIT',
               transitOptions:{
                 modes: ['SUBWAY']  ,
                 routingPreference: 'LESS_WALKING'
               },
               provideRouteAlternatives:true
            };

          }; 
    
         directionsService.route(dirseroption, function(response, status) {
           if (status === google.maps.DirectionsStatus.OK) {
               
           var roadresult=response.routes;
           var tmpr=[];
           var qqq;
           if (travel_mode==google.maps.DirectionsTravelMode.TRANSIT) {
           ropt=roadresult.length

          for (qqq=0;qqq<ropt;qqq++) 
             tmpr.push(roadresult[qqq]);
          var tmpindex=[];
        var li1,li2;
       for (li1=0;li1<ropt;li1++) 
          if (JSON.stringify(tmpr[li1].legs[0]).indexOf('BUS')!=-1) 
           {
            tmpindex.push(li1);
           }
           for (var i = tmpindex.length -1; i >= 0; i--)
             tmpr.splice(tmpindex[i],1);
             roadresult=[];
             if (tmpr.length>0) roadresult.push(tmpr[0]);
             }
           
            var bounds = new google.maps.LatLngBounds();
            var tbounds = new google.maps.LatLngBounds();
            var legs;
            if (roadresult.length>1)      legs= roadresult[routeindex].legs;
            else legs= roadresult[0].legs;
            for (i = 0; i < legs.length; i++) {
              var steps = legs[i].steps;
              for (j = 0; j < steps.length; j++) {
                var nextSegment = steps[j].path;
                for (k = 0; k < nextSegment.length; k++) {
                
                hpolyline.getPath().push(nextSegment[k]);
                bounds.extend(nextSegment[k]);
               }
             }
            }
            hpolyline.setMap(imap);  
      
          } 
  });
} ;
          
       
       /*************************************************/
        
       $('#answerbtn').click(function() {
           
       
          antext=$("#message-text").val().trim();
          if (antext=="") {
            $("#prompterr").text("please explain the bug in details");
            return;          
          }
          else {$('#myModal').modal('toggle');  
             $.ajax({
                   url: baseurl + '/bugs',
                   dataType: 'json',
		             async : false,
                   type: 'POST',
                   contentType: 'application/json; charset=utf-8',
                   data: JSON.stringify({ "gameid": gameid, "bugdetails":antext}),
                   headers: { 'Authorization' : myObject.auth_token       } 
          }).done(function(msg) {
                  // alert(JSON.stringify(msg));
                   
    		 })
          .fail(function(msg) {
                    alert(JSON.stringify(msg));
          });
      
              }
      });
        
        
          
 
});

     
  
    </script>    
    <script  async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDVHCSIgYfsYUdCjpevjf00e0RsOyAAvDY&callback=initMap"
    ></script> 
  </body>
</html>